-- Criação das Tabelas
-- 1 . TOPT_LINX_CEST
DROP TABLE TOPT_LINX_CEST CASCADE CONSTRAINTS;
CREATE TABLE TOPT_LINX_CEST ( 
  CODIGO    VARCHAR2 (10) NOT NULL,
  DESCRICAO VARCHAR2 (700) NOT NULL,
  CONSTRAINT CEST_PK PRIMARY KEY (CODIGO)
); 

-- 2. TOPT_LINX_PRODUTOS 
-- Itens com estoque em qualquer unidade e ou movimentação igual ou posterior a data de 01/01/2017
DROP TABLE TOPT_LINX_PRODUTOS;
CREATE TABLE TOPT_LINX_PRODUTOS AS
SELECT * FROM (
SELECT CAST(IE.COD_ITEM AS VARCHAR2(50)) CODIGO
     , IE.DES_ITEM NOME_PRODUTO
     , COALESCE((SELECT MAX(COD_PESSOA) FROM IE_FORNECEDORES WHERE COD_ITEM = IE.COD_ITEM), 500001) COD_FORNECEDOR
     , COALESCE(SUBSTR(FR.COD_REF_FORNECEDOR, 1, 20), 'SEM CADASTRO') REFERENCIA
     , COALESCE(SUBSTR(FR.COD_REF_FORNECEDOR, 1, 40), 'SEM CADASTRO') COD_AUXILIAR
     , MA.COD_NIV0 COD_SETOR
     , CASE MA.COD_NIV0 
            WHEN '20' THEN 'Perfumaria'
            WHEN '21' THEN 'Casa e Decoracao'
            WHEN '22' THEN 'Bebidas'
            WHEN '23' THEN 'Cosmeticos'
            WHEN '27' THEN 'Eletronicos'
            WHEN '30' THEN 'Acessorios'
       END SETOR 
     , RTRIM(CASE MA.COD_NIV0
            WHEN '20' THEN (SELECT MA.COD_NIV6 FROM IE_MASCARAS MA WHERE MA.COD_MASCARA = 101 AND MA.COD_NIV0 = 20 AND MA.COD_ITEM = IE.COD_ITEM)
            WHEN '21' THEN (SELECT MA.COD_NIV5 FROM IE_MASCARAS MA WHERE MA.COD_MASCARA = 101 AND MA.COD_NIV0 = 21 AND MA.COD_ITEM = IE.COD_ITEM)
            WHEN '22' THEN (SELECT MA.COD_NIV3 FROM IE_MASCARAS MA WHERE MA.COD_MASCARA = 101 AND MA.COD_NIV0 = 22 AND MA.COD_ITEM = IE.COD_ITEM)
            WHEN '23' THEN (SELECT MA.COD_NIV3 FROM IE_MASCARAS MA WHERE MA.COD_MASCARA = 101 AND MA.COD_NIV0 = 23 AND MA.COD_ITEM = IE.COD_ITEM)
            WHEN '27' THEN (SELECT MA.COD_NIV2 FROM IE_MASCARAS MA WHERE MA.COD_MASCARA = 101 AND MA.COD_NIV0 = 27 AND MA.COD_ITEM = IE.COD_ITEM)
            WHEN '30' THEN (SELECT MA.COD_NIV5 FROM IE_MASCARAS MA WHERE MA.COD_MASCARA = 101 AND MA.COD_NIV0 = 30 AND MA.COD_ITEM = IE.COD_ITEM)
       END) COD_LINHA
     , RTRIM(CASE MA.COD_NIV0 
            WHEN '20' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 20, 6)
            WHEN '21' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 21, 5)
            WHEN '22' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 22, 3)
            WHEN '23' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 23, 3)
            WHEN '27' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 27, 2)
            WHEN '30' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 30, 5)
       END) LINHA      
     , RTRIM(CASE MA.COD_NIV0 
            WHEN '20' THEN MA.COD_NIV4
            WHEN '21' THEN MA.COD_NIV4
            WHEN '22' THEN MA.COD_NIV4
            WHEN '23' THEN MA.COD_NIV5
            WHEN '27' THEN MA.COD_NIV1
            WHEN '30' THEN MA.COD_NIV4
       END) COD_MARCA  
     , RTRIM(CASE MA.COD_NIV0 
            WHEN '20' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 20, 4)
            WHEN '21' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 21, 4)
            WHEN '22' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 22, 4)
            WHEN '23' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 23, 5)
            WHEN '27' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 27, 1)
            WHEN '30' THEN TOPF_GET_DES_NIVEL(IE.COD_ITEM, 30, 4)
       END) MARCA         
     , 1 COD_COLECAO      
     , 1 COD_GRADE1
     , 1 COD_GRADE2
     , 'UN' UNIDADE
     , cast(TOPF_GET_PRECO_VIGENTE(IE.COD_ITEM, 67) AS NUMBER(18,2)) PRECO_CUSTO
     , cast(TOPF_GET_PRECO_VIGENTE(IE.COD_ITEM, 50) AS NUMBER(18,2)) PRECO_VENDA     
     , NBM.COD_CEST AS CEST 
     , IE.COD_NBM NCM
     , TR.ID ID_CONFIG_TRIBUTARIA
     , IE.QTD_PESO_BRUTO PESO_BRUTO
	 , IE.QTD_PESO_LIQ PESO_LIQUIDO
  FROM IE_ITENS IE 
  JOIN IE_MASCARAS MA ON IE.COD_ITEM = MA.COD_ITEM
  LEFT JOIN IE_FORNECEDORES FR ON IE.COD_ITEM = FR.COD_ITEM  
  LEFT JOIN TOPT_LINX_TRIB TR ON IE.COD_NBM = TR.COD_NBM AND IE.COD_GR_FISCAL = TR.COD_GR_FISCAL
  LEFT JOIN IE_CODIGOS_NBM NBM ON IE.COD_NBM = NBM.COD_NBM
 WHERE 1=1
    AND IE.IND_INATIVO = 0
    AND MA.COD_MASCARA = 101 AND MA.COD_NIV0 IN (20,21,22,23,27,30) 
    AND (EXISTS (SELECT 1 FROM CE_ESTOQUES WHERE COD_UNIDADE != 0 AND QTD_ESTOQUE > 0 AND COD_ITEM = IE.COD_ITEM) 
           OR EXISTS (SELECT 1 FROM CE_DIARIOS WHERE COD_ITEM = IE.COD_ITEM AND DTA_LANCAMENTO >= TO_DATE('01/01/2017', 'DD/MM/YYYY'))
       )
ORDER BY IE.COD_ITEM
) WHERE 1=1   
    AND PRECO_CUSTO > 0
    AND PRECO_VENDA > 0
    AND COD_LINHA IS NOT NULL; 

-- 3. TOPT_LINX_COND_PGTO 
-- Tabela de/para para as condições de pagamento
DROP TABLE TOPT_LINX_COND_PGTO CASCADE CONSTRAINTS;
CREATE TABLE TOPT_LINX_COND_PGTO (
	  SISTEMA        VARCHAR2 (15) NOT NULL
	, CODIGO         NUMBER NOT NULL
	, TIP_TITULO     NUMBER (4) NOT NULL
	, DES_LANCAMENTO VARCHAR2 (150) NOT NULL
	, COD_COND_PGTO  NUMBER (4) NOT NULL
	, DES_COND_PGTO  VARCHAR2 (150) NOT NULL
	, IND_AVISTA     NUMBER (1) NOT NULL
	, COD_PESSOA     NUMBER (7),
	CONSTRAINT LINX_RELAC_COND_PGTO_PK PRIMARY KEY (SISTEMA, CODIGO)
	);

-- 4. TOPT_LINX_EXEC 	
-- Controla a execuções de integrações
DROP TABLE TOPT_LINX_EXEC CASCADE CONSTRAINTS;
CREATE TABLE TOPT_LINX_EXEC	(
	  ID          NUMBER NOT NULL
	, NOME        VARCHAR2 (100) NOT NULL
	, DTA_INICIO  DATE NOT NULL
	, HORA        NUMBER (2) NOT NULL
	, MINUTO      NUMBER (2) NOT NULL
	, ORIGEM      NUMBER (1) NOT NULL
	, DESTINO     NUMBER (1) NOT NULL
	, CADASTRO    VARCHAR2 (20) NOT NULL
	, QTD_PAGINAS NUMBER NOT NULL,
	CONSTRAINT TOPT_LINX_EXEC_PK PRIMARY KEY (ID)
	);

COMMENT ON COLUMN TOPT_LINX_EXEC.ID IS 'ID da execução';
COMMENT ON COLUMN TOPT_LINX_EXEC.NOME IS 'Nome da execução';
COMMENT ON COLUMN TOPT_LINX_EXEC.DTA_INICIO IS 'Data de inicio da execução';
COMMENT ON COLUMN TOPT_LINX_EXEC.HORA IS 'Hora da execução';
COMMENT ON COLUMN TOPT_LINX_EXEC.MINUTO IS 'Minuto da execução';
COMMENT ON COLUMN TOPT_LINX_EXEC.ORIGEM IS 'Identifica o sistema origem da informação. Valores: 1=NL, 2=MICROVIX, 3=PCI';
COMMENT ON COLUMN TOPT_LINX_EXEC.DESTINO IS 'Identifica o sistema destino da informação. Valores: 1=NL, 2=MICROVIX, 3=PCI';
COMMENT ON COLUMN TOPT_LINX_EXEC.CADASTRO IS 'Identifica o cadastro que criou a execução. Ex.: Barras, Cest, NCM, Produtos, Pessoas, Linha, Setor, Marca';

-- 5. TOPT_LINX_LOG 	
-- Armazena o log das execuções
DROP TABLE TOPT_LINX_LOG CASCADE CONSTRAINTS;
CREATE TABLE TOPT_LINX_LOG (
	  ID      NUMBER NOT NULL
	, EXEC_ID NUMBER NOT NULL
	, LOG     VARCHAR2 (350) NOT NULL
	, XML     CLOB
	, ERRO    CLOB,
	CONSTRAINT TOPT_LINX_LOG_PK PRIMARY KEY (ID),
	CONSTRAINT TOPT_LINX_LOG_FK1 FOREIGN KEY (EXEC_ID) REFERENCES TOPT_LINX_EXEC (ID)
	);

-- 6. TOPT_LINX_OPERACOES 	
-- Tabela de/para para as operações fiscais do NL
DROP TABLE TOPT_LINX_OPERACOES CASCADE CONSTRAINTS;
CREATE TABLE TOPT_LINX_OPERACOES (
	  CFOP         NUMBER (4) NOT NULL
	, COD_OPER     NUMBER (4) NOT NULL
	, DES_OPER     VARCHAR2 (150) NOT NULL
	, NUM_SEQ_OPER NUMBER (2),
	CONSTRAINT LINX_OPERACOES_PK PRIMARY KEY (CFOP)
	);

-- 7. TOPT_LINX_REL_UNID 	
-- Tabela de/para para as unidades de negócio do NL
DROP TABLE TOPT_LINX_REL_UNID CASCADE CONSTRAINTS;
CREATE TABLE TOPT_LINX_REL_UNID (
	  COD_UNIDADE  NUMBER (4) NOT NULL
	, COD_PCI      NUMBER (3)
	, COD_MICROVIX NUMBER (10)
	, CNPJ         VARCHAR2 (20) NOT NULL
	, DES_MODELO   VARCHAR2 (20) NOT NULL
	, COD_UF       VARCHAR2 (3) NOT NULL
	, COD_LOCAL    VARCHAR2 (30) NOT NULL
	, COD_PESSOA   NUMBER (7)
	);

-- 8. TOPT_LINX_TRIB 
-- Tabela de associação criada a partir da planilha de tributação de parametrização do Microvix. Revida pela Anne fiscal.
DROP TABLE TOPT_LINX_TRIB CASCADE CONSTRAINTS;
CREATE TABLE TOPT_LINX_TRIB	(
	  ID            NUMBER (10) NOT NULL
	, COD_GR_FISCAL NUMBER (4) NOT NULL
	, COD_NBM       VARCHAR2 (10) NOT NULL
	, ORIGEM        VARCHAR2 (15),
	CONSTRAINT TOPT_LINX_TR_PK PRIMARY KEY (COD_GR_FISCAL, COD_NBM)
	);
	
COMMENT ON COLUMN TOPT_LINX_TRIB.ID IS 'ID da tributação no sistema LINX';
COMMENT ON COLUMN TOPT_LINX_TRIB.COD_GR_FISCAL IS 'Código do grupo fiscal dos itens';
COMMENT ON COLUMN TOPT_LINX_TRIB.COD_NBM IS 'Código NCM dos itens';

-- 9. TOPT_LINX_LINHA 
-- Tabela criada para ficar mais rapida a consulta
DROP TABLE TOPT_LINX_LINHA CASCADE CONSTRAINTS;
CREATE TABLE TOPT_LINX_LINHA AS 
SELECT CODIGO
     , SUBSTR(NOME_LINHA, 1, 30) NOME_LINHA
  FROM (SELECT CASE IMA.COD_NIV0
                 WHEN '20' THEN '20'||IMA.COD_NIV6
                 WHEN '21' THEN '21'||IMA.COD_NIV5
                 WHEN '22' THEN '22'||IMA.COD_NIV3
                 WHEN '23' THEN '23'||IMA.COD_NIV3
                 WHEN '27' THEN '27'||IMA.COD_NIV2
                 WHEN '30' THEN '30'||IMA.COD_NIV5
               END CODIGO 
             , CASE IMA.COD_NIV0 
                 WHEN '20' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 20, 6)
                 WHEN '21' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 21, 5)
                 WHEN '22' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 22, 3)
                 WHEN '23' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 23, 3)
                 WHEN '27' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 27, 2)
                 WHEN '30' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 30, 5)
               END NOME_LINHA 
          FROM IE_MASCARAS IMA 
         WHERE IMA.COD_MASCARA = 101
           AND IMA.COD_NIV0 IN (20, 21, 22, 23, 27, 30) 
)GROUP BY CODIGO, NOME_LINHA        
 ORDER BY CODIGO;

-- 10. TOPT_LINX_MARCA 
-- Tabela criada para ficar mais rapida a consulta
DROP TABLE TOPT_LINX_MARCA;
CREATE TABLE TOPT_LINX_MARCA AS
SELECT CODIGO
     , SUBSTR(NOME_MARCA, 1, 30) NOME_MARCA
  FROM (SELECT CASE IMA.COD_NIV0
                 WHEN '20' THEN '20'||IMA.COD_NIV4
                 WHEN '21' THEN '21'||IMA.COD_NIV4
                 WHEN '22' THEN '22'||IMA.COD_NIV4
                 WHEN '23' THEN '23'||IMA.COD_NIV5
                 WHEN '27' THEN '27'||IMA.COD_NIV1
                 WHEN '30' THEN '30'||IMA.COD_NIV4
               END CODIGO 
             , CASE IMA.COD_NIV0 
                 WHEN '20' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 20, 4)
                 WHEN '21' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 21, 4)
                 WHEN '22' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 22, 4)
                 WHEN '23' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 23, 5)
                 WHEN '27' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 27, 1)
                 WHEN '30' THEN TOPF_GET_DES_NIVEL(IMA.COD_ITEM, 30, 4)
               END NOME_MARCA 
          FROM IE_MASCARAS IMA 
         WHERE IMA.COD_MASCARA = 101
           AND IMA.COD_NIV0 IN (20, 21, 22, 23, 27, 30) 
)GROUP BY CODIGO, NOME_MARCA        
 ORDER BY CODIGO;

	
-----------------------------------------------------------------------------------------
-- Criação das Views

-- 1. TOPV_LINX_CEST
DROP VIEW TOPV_LINX_CEST;
CREATE OR REPLACE VIEW TOPV_LINX_CEST AS
SELECT CODIGO
     , DESCRICAO
  FROM TOPT_LINX_CEST
 ORDER BY CODIGO;

-- 2. TOPV_LINX_PRODUTOS
DROP VIEW TOPV_LINX_PRODUTOS;
CREATE OR REPLACE VIEW TOPV_LINX_PRODUTOS AS
SELECT CODIGO
	 , NOME_PRODUTO
	 , COD_FORNECEDOR
	 , REFERENCIA
	 , COD_AUXILIAR
	 , COD_SETOR
	 , SETOR
	 , COD_LINHA
	 , LINHA
	 , COD_MARCA
	 , MARCA
	 , COD_COLECAO
	 , COD_GRADE1
	 , COD_GRADE2
	 , UNIDADE
	 , PRECO_CUSTO
	 , PRECO_VENDA
	 , NULL COD_CLASSIFICACAO     
     , NULL COD_ESPESSURA
     , NULL ORIGEM_MERCADORIA
	 , CEST
	 , NCM
	 , ID_CONFIG_TRIBUTARIA
	 , NULL DESATIVADO     
     , NULL ENTREGA_FUTURA
	 , PESO_BRUTO
	 , PESO_LIQUIDO
	 , NULL VOLUME
	 , NULL CUSTO_MEDIO
	 , NULL DESCRICAO_BASICA
	 , NULL EXIGE_CONTROLE_SERIAL
	 , NULL SERIAL_TIPO
	 , NULL SERIAL_TAMANHO
	 , NULL TRIBUTA_FCP
	 , NULL ALTURA_PARA_FRETE
	 , NULL COD_COMPRADOR
	 , NULL COD_TIPO_ITEM
	 , NULL COMPRIMENTO_PARA_FRETE
	 , NULL IPI
	 , NULL LARGURA_PARA_FRETE
	 , NULL UNIDADE_COMPRA	    
  FROM TOPT_LINX_PRODUTOS
 WHERE 1=1   
   AND PRECO_CUSTO > 0
   AND PRECO_VENDA > 0
   AND COD_LINHA IS NOT NULL;

-- 3, TOPV_LINX_BARRAS 
DROP VIEW TOPV_LINX_BARRAS;
CREATE OR REPLACE VIEW TOPV_LINX_BARRAS AS
SELECT I.SETOR
     , IE.COD_ITEM COD_PRODUTO
     , I.NOME_PRODUTO DESCRICAO
     , IE.COD_COMPLETO COD_BARRAS
  FROM IE_MASCARAS IE 
 JOIN TOPV_LINX_PRODUTOS I ON IE.COD_ITEM = I.CODIGO
 WHERE IE.COD_MASCARA = 300; 
 
-- 4. TOPV_LINX_LINHA
DROP VIEW TOPV_LINX_LINHA;
CREATE OR REPLACE VIEW TOPV_LINX_LINHA AS
SELECT CODIGO, NOME_LINHA 
  FROM TOPT_LINX_LINHA
 ORDER BY CODIGO;

-- 5. TOPV_LINX_MARCA
DROP VIEW TOPV_LINX_MARCA;
CREATE OR REPLACE VIEW TOPV_LINX_MARCA AS
SELECT CODIGO
     , NOME_MARCA
  FROM TOPT_LINX_MARCA
 ORDER BY CODIGO;
 
-- 6. TOPV_LINX_NCM
DROP VIEW TOPV_LINX_NCM;
CREATE OR REPLACE VIEW TOPV_LINX_NCM AS
SELECT COD_NBM CODIGO
     , SUBSTR(DES_NBM, 1, 60) DESCRICAO
  FROM IE_CODIGOS_NBM;

-- 7. TOPV_LINX_PESSOAS
DROP VIEW TOPV_LINX_PESSOAS;
CREATE OR REPLACE VIEW TOPV_LINX_PESSOAS AS
SELECT "CODIGO","NOME_RAZAO_SOCIAL","DOC_CLIENTE","TIPOPESSOA","PF_PJ","ENDERECO","CIDADE","UF","ESTADO_CIVIL","TIPO","NOME_FANTASIA","IDENTIDADE_CLIENTE","INSCRICAO_CLIENTE","NUMERO_ENDERECO","COMPLEMENTO","BAIRRO","CEP","TELEFONE","FAX","CELULAR","EMAIL","DATA_NASCIMENTO","PROFISSAO","SEXO","PAIS","ATUALIZAR_POR_CPF_CNPJ","TABELA_PRECO","TIPO_REGISTRO_PROFISSIONAL","ATIVO","ID_SUBCLASSE","LIMITE_CREDITO_COMPRA","VALOR_TOLERANCIA","TIPO_RENOVACAO_SALDO" 
  FROM (
SELECT PE.COD_PESSOA CODIGO
     , INITCAP(SUBSTR(PE.DES_PESSOA, 1, 60)) NOME_RAZAO_SOCIAL
     , LPAD(COALESCE(PJ.NUM_CGC, PF.NUM_CPF),14,'0') DOC_CLIENTE
     , 'Fornecedor' TIPOPESSOA
     , CASE 
          WHEN PF.NUM_CPF IS NULL AND PJ.NUM_CGC IS NOT NULL THEN 'J' 
          ELSE 'F' 
       END PF_PJ 
     , INITCAP(COALESCE(PE.DES_ENDERECO, 'Não Informado')) ENDERECO
     , SUBSTR(CI.DES_CIDADE, 1, 40) CIDADE
     , SUBSTR(CI.COD_UF, 1, 2) UF
     , CASE 
          WHEN PF.TIP_CIVIL = 1 THEN 3
          WHEN PF.TIP_CIVIL = 2 THEN 2
          WHEN PF.TIP_CIVIL = 3 THEN 5
          WHEN PF.TIP_CIVIL = 4 THEN 1
          WHEN PF.TIP_CIVIL = 5 THEN 4          
          WHEN PF.TIP_CIVIL = 6 THEN 6
          WHEN PF.TIP_CIVIL IS NULL THEN 6
       END ESTADO_CIVIL
     , 'A' TIPO
     , INITCAP(PE.DES_FANTASIA) NOME_FANTASIA 
     , PF.NUM_RG IDENTIDADE_CLIENTE
     , PJ.NUM_INSC_EST INSCRICAO_CLIENTE
     , NULL NUMERO_ENDERECO
     , INITCAP(PE.DES_PONTO_REFERENCIA) COMPLEMENTO
     , INITCAP(PE.DES_BAIRRO) BAIRRO
     , SUBSTR(REPLACE(REPLACE(REPLACE(PE.NUM_CEP, '-', ''), '.', ''), ' ', ''), 1, 8) CEP
     , PC.NUM_FONE TELEFONE
     , NULL FAX
     , NULL CELULAR
     , LOWER(PE.DES_EMAIL) EMAIL
     , TO_CHAR(TO_DATE(PF.DTA_NASC, 'DD/MM/RRRR'), 'YYYY/MM/DD HH24:MI:SS') DATA_NASCIMENTO   
     , NULL PROFISSAO
     , CASE WHEN PF.TIP_SEXO = 1 THEN 'M' ELSE 'F' END SEXO
     , 'BRASIL' PAIS
     , 1 ATUALIZAR_POR_CPF_CNPJ
     , NULL TABELA_PRECO
     , NULL TIPO_REGISTRO_PROFISSIONAL
     , NULL ATIVO
     , NULL ID_SUBCLASSE
     , NULL LIMITE_CREDITO_COMPRA
     , NULL VALOR_TOLERANCIA
     , NULL TIPO_RENOVACAO_SALDO
  FROM PS_PESSOAS PE
  LEFT JOIN PS_JURIDICAS PJ ON PE.COD_PESSOA = PJ.COD_PESSOA
  LEFT JOIN PS_FISICAS PF ON PE.COD_PESSOA = PF.COD_PESSOA
  LEFT JOIN G1_CIDADES CI ON PE.COD_CIDADE = CI.COD_CIDADE
  LEFT JOIN PS_TELEFONES PC ON PE.COD_PESSOA = PC.COD_PESSOA AND PC.NUM_SEQ = 1
 WHERE IND_INATIVO = 0
   AND (PJ.NUM_CGC IS NOT NULL OR PF.NUM_CPF IS NOT NULL)
   AND EXISTS(SELECT IEF.COD_PESSOA FROM IE_FORNECEDORES IEF JOIN TOPT_LINX_PRODUTOS IE ON IEF.COD_ITEM = IE.CODIGO WHERE PE.COD_PESSOA = IEF.COD_PESSOA GROUP BY IEF.COD_PESSOA)
UNION 
 SELECT PE.COD_PESSOA CODIGO
     , INITCAP(SUBSTR(PE.DES_PESSOA, 1, 60)) NOME_RAZAO_SOCIAL
     , LPAD(COALESCE(PJ.NUM_CGC, PF.NUM_CPF),14,'0') DOC_CLIENTE
     , 'Cliente' TIPOPESSOA
     , CASE 
          WHEN PF.NUM_CPF IS NULL AND PJ.NUM_CGC IS NOT NULL THEN 'J' 
          ELSE 'F' 
       END PF_PJ 
     , INITCAP(COALESCE(PE.DES_ENDERECO, 'Não Informado')) ENDERECO
     , SUBSTR(CI.DES_CIDADE, 1, 40) CIDADE
     , SUBSTR(CI.COD_UF, 1, 2) UF
     , CASE 
          WHEN PF.TIP_CIVIL = 1 THEN 3
          WHEN PF.TIP_CIVIL = 2 THEN 2
          WHEN PF.TIP_CIVIL = 3 THEN 5
          WHEN PF.TIP_CIVIL = 4 THEN 1
          WHEN PF.TIP_CIVIL = 5 THEN 4          
          WHEN PF.TIP_CIVIL = 6 THEN 6
          WHEN PF.TIP_CIVIL IS NULL THEN 6
       END ESTADO_CIVIL
     , 'A' TIPO
     , INITCAP(PE.DES_FANTASIA) NOME_FANTASIA 
     , PF.NUM_RG IDENTIDADE_CLIENTE
     , PJ.NUM_INSC_EST INSCRICAO_CLIENTE
     , NULL NUMERO_ENDERECO
     , INITCAP(PE.DES_PONTO_REFERENCIA) COMPLEMENTO
     , INITCAP(PE.DES_BAIRRO) BAIRRO
     , SUBSTR(REPLACE(REPLACE(REPLACE(PE.NUM_CEP, '-', ''), '.', ''), ' ', ''), 1, 8) CEP
     , PC.NUM_FONE TELEFONE
     , NULL FAX
     , NULL CELULAR
     , LOWER(PE.DES_EMAIL) EMAIL
     , TO_CHAR(TO_DATE(PF.DTA_NASC, 'DD/MM/RRRR'), 'YYYY/MM/DD HH24:MI:SS') DATA_NASCIMENTO   
     , NULL PROFISSAO
     , CASE WHEN PF.TIP_SEXO = 1 THEN 'M' ELSE 'F' END SEXO
     , 'BRASIL' PAIS
     , 1 ATUALIZAR_POR_CPF_CNPJ
     , NULL TABELA_PRECO
     , NULL TIPO_REGISTRO_PROFISSIONAL
     , NULL ATIVO
     , NULL ID_SUBCLASSE
     , NULL LIMITE_CREDITO_COMPRA
     , NULL VALOR_TOLERANCIA
     , NULL TIPO_RENOVACAO_SALDO
  FROM PS_PESSOAS PE
  LEFT JOIN PS_JURIDICAS PJ ON PE.COD_PESSOA = PJ.COD_PESSOA
  LEFT JOIN PS_FISICAS PF ON PE.COD_PESSOA = PF.COD_PESSOA
  LEFT JOIN G1_CIDADES CI ON PE.COD_CIDADE = CI.COD_CIDADE
  LEFT JOIN PS_TELEFONES PC ON PE.COD_PESSOA = PC.COD_PESSOA AND PC.NUM_SEQ = 1
 WHERE IND_INATIVO = 0
   AND (PJ.NUM_CGC IS NOT NULL OR PF.NUM_CPF IS NOT NULL)
   AND NOT EXISTS(SELECT IEF.COD_PESSOA FROM IE_FORNECEDORES IEF JOIN TOPT_LINX_PRODUTOS IE ON IEF.COD_ITEM = IE.CODIGO WHERE PE.COD_PESSOA = IEF.COD_PESSOA GROUP BY IEF.COD_PESSOA)
) ORDER BY CODIGO;

-- 8. TOPV_LINX_SETOR
DROP VIEW TOPV_LINX_SETOR;
CREATE OR REPLACE VIEW TOPV_LINX_SETOR AS
SELECT G3.COD_FORMATO CODIGO
     ,  SUBSTR(G3.DES_FORMATO,1,30) NOME_SETOR 
  FROM G3_FORMATOS G3
 WHERE G3.COD_MASCARA = 101
   AND G3.COD_FORMATO IN (20, 21, 22, 23, 27, 30);

-- 9. TOPV_LINX_UNIDADES   
DROP VIEW TOPV_LINX_UNIDADES;
CREATE OR REPLACE VIEW TOPV_LINX_UNIDADES AS
SELECT COD_UNIDADE
     , DES_NOME 
  FROM GE_UNIDADES
 WHERE COD_UNIDADE IN (SELECT COD_UNIDADE FROM TOPT_LINX_REL_UNID);   
 
DROP SEQUENCE TOPT_LINX_EXEC_SEQ;
CREATE SEQUENCE TOPT_LINX_EXEC_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	MAXVALUE 9999999999999999999999999999
	NOCYCLE
	NOORDER
	CACHE 20;


DROP SEQUENCE TOPT_LINX_LOG_SEQ;
CREATE SEQUENCE TOPT_LINX_LOG_SEQ
	START WITH 1
	INCREMENT BY 1
	NOMINVALUE
	MAXVALUE 9999999999999999999999999999
	NOCYCLE
	NOORDER
	CACHE 20;

CREATE OR REPLACE TRIGGER TOPT_LINX_EXEC_TRG 
BEFORE INSERT ON TOPT_LINX_EXEC 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT TOPT_LINX_EXEC_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER TOPT_LINX_EXEC_TRG ENABLE;

CREATE OR REPLACE TRIGGER TOPT_LINX_LOG_TRG 
BEFORE INSERT ON TOPT_LINX_LOG 
FOR EACH ROW 
BEGIN
  <<COLUMN_SEQUENCES>>
  BEGIN
    IF INSERTING AND :NEW.ID IS NULL THEN
      SELECT TOPT_LINX_LOG_SEQ.NEXTVAL INTO :NEW.ID FROM SYS.DUAL;
    END IF;
  END COLUMN_SEQUENCES;
END;
ALTER TRIGGER TOPT_LINX_LOG_TRG ENABLE;
